---
save_images: false
detailed_stats: false
dataset: /local/cifar10-gcn-whitened/
pickled: false
random_seed: 42
L1_reg: 0.0
L2_reg: 0.001
n_epochs: 100
center_and_normalise: true
training_method: normal
join_train_and_valid: true
shuffle_dataset: true
#learning_rate: !MultiplicativeDecayLearningRate { start: 0.05, stop: 1.0e-5, multiplier: 0.95 }
#learning_rate: !CompositeLearningRate { schedule: {
#          1: !FixedLearningRate { rate: 1.0e-1 },
#         10: !FixedLearningRate { rate: 1.0e-2 },
#         20: !FixedLearningRate { rate: 1.0e-3 },
#         30: !FixedLearningRate { rate: 1.0e-4 }
#    }
#}
#update_rule: !SGD { momentum: 0.9 }
learning_rate: !MultiplicativeDecayLearningRate { start: 1.0e-3, stop: 1.0e-5, multiplier: 0.99 }
update_rule: !Adam { }
#learning_rate: !MultiplicativeDecayLearningRate { start: 1.0e-4, stop: 1.0e-6, multiplier: 0.95 }
#update_rule: !RMSProp { momentum: 0.9 }
batch_size: 128
cost_function: !CrossEntropy { }
output_layer_options: { has_weights: false }
n_hidden: [
            #input_shape,filter_shape,pool_size,drop_this,name_this,activation_this
            #input_shape needs to be defined only for 1st layer
            #input_shape:  [levels,x,y]
            #filter_shape: [count,x,y]
            #pool_size: [x,y]
            ['convfilter', [
                [3,32,32],
                [128,3,3],
                0.,
                'c1',
                !ReLU { },
                !GlorotWeightInit { },
                'same',
                { batch_normalization: true , pad: [1,1] }
            ]],
            ['convfilter', [
                !!null ,
                [128,3,3],
                0.,
                'c1',
                !ReLU { },
                !GlorotWeightInit { },
                'same',
                { batch_normalization: true , pad: [1,1] }
            ]],
            ['convfilter', [
                !!null ,
                [128,3,3],
                0.,
                'c2',
                !ReLU { },
                !GlorotWeightInit { },
                'same',
                { batch_normalization: true , pad: [1,1] }
            ]],
            ['convfilter', [
                !!null ,
                [128,3,3],
                0.25,
                'c2',
                !ReLU { },
                !GlorotWeightInit { },
                'same',
                { batch_normalization: true , pad: [1,1], strides: [2,2]  }
            ]],
            #['pool2d', ['max', [3,3], 'pool1', { strides: [2,2] } ]],
            ['convfilter', [
                !!null ,
                [256,3,3],
                0.25,
                'c3',
                !ReLU { },
                !GlorotWeightInit { },
                'same',
                { batch_normalization: true , pad: [1,1] }
            ]],
            ['convfilter', [
                !!null ,
                [256,3,3],
                0.25,
                'c4',
                !ReLU { },
                !GlorotWeightInit { },
                'same',
                { batch_normalization: true , pad: [1,1] }
            ]],
            ['convfilter', [
                !!null ,
                [256,3,3],
                0.25,
                'c2',
                !ReLU { },
                !GlorotWeightInit { },
                'same',
                { batch_normalization: true , pad: [1,1], strides: [2,2]  }
            ]],
            #['pool2d', ['max', [3,3], 'pool2', { strides: [2,2] } ]],
            ['convfilter', [
                !!null ,
                [512,3,3],
                0.25,
                'c5',
                !ReLU { },
                !GlorotWeightInit { },
                'same',
                { batch_normalization: true , pad: [1,1] }
            ]],
            ['convfilter', [
                !!null ,
                [512,3,3],
                0.25,
                'c6',
                !ReLU { },
                !GlorotWeightInit { },
                'same',
                { batch_normalization: true , pad: [1,1] }
            ]],
            ['convfilter', [
                !!null ,
                [512,3,3],
                0.25,
                'c2',
                !ReLU { },
                !GlorotWeightInit { },
                'same',
                { batch_normalization: true , pad: [1,1], strides: [2,2]  }
            ]],
            #['convfilter', [
            #    !!null ,
            #    [512,1,1],
            #    0.,
            #    'c6',
            #    !ReLU { },
            #    !GlorotWeightInit { },
            #    'same',
            #    { batch_normalization: true , pad: [1,1] }
            #]],
            #['convfilter', [
            #    !!null ,
            #    [10,1,1],
            #    0.,
            #    'c6',
            #    !ReLU { },
            #    !GlorotWeightInit { },
            #    'same',
            #    { batch_normalization: true , pad: [1,1] }
            #]],
            #['pool2d', ['max', [3,3], 'pool3', { strides: [2,2] } ]],
            ['flat', [1024, 0.5, 'f1', !ReLU { }, !GlorotWeightInit { }, { batch_normalization: true } ]],
            #['pool2d', ['average_exc_pad', [8,8], 'pool1' , { strides: [1,1], batch_normalization: true } ]],
            ['flat', [10, 0., 'f2', !ReLU { }, !GlorotWeightInit { }, { batch_normalization: true } ]]
          ]
n_in: 3072
RGB: True
n_out: 10

#Ensemble params
resample_size: 50000
method: !AdaBoostM1 {}
ensemble_size: 10
